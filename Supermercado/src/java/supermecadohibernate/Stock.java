package supermecadohibernate;
// Generated May 25, 2023 2:02:34 AM by Hibernate Tools 4.3.1

import java.util.Iterator;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;




/**
 * Stock generated by hbm2java
 */
public class Stock  implements java.io.Serializable {


     private Integer idStock;
     private int quantidadeProduto;
     private int produtoId;
     private Produtos produtos;

    public Stock() {
    }

	
    public Stock(int quantidadeProduto, int produtoId) {
        this.quantidadeProduto = quantidadeProduto;
        this.produtoId = produtoId;
    }
    public Stock(int quantidadeProduto, int produtoId, Produtos produtos) {
       this.quantidadeProduto = quantidadeProduto;
       this.produtoId = produtoId;
       this.produtos = produtos;
    }
   
    public Integer getIdStock() {
        return this.idStock;
    }
    
    public void setIdStock(Integer idStock) {
        this.idStock = idStock;
    }
    public int getQuantidadeProduto() {
        return this.quantidadeProduto;
    }
    
    public void setQuantidadeProduto(int quantidadeProduto) {
        this.quantidadeProduto = quantidadeProduto;
    }
    public int getProdutoId() {
        return this.produtoId;
    }
    
    public void setProdutoId(int produtoId) {
        this.produtoId = produtoId;
    }
    public Produtos getProdutos() {
        return this.produtos;
    }
    
    public void setProdutos(Produtos produtos) {
        this.produtos = produtos;
    }

public String recuperarDados(){
        SessionFactory sessionFactory = new Configuration().configure().buildSessionFactory();
        Session sessao = sessionFactory.openSession();
        Transaction tr=null;
        Iterator it;
        Stock stock;
        try{
            tr=sessao.beginTransaction();
           Query q=sessao.createQuery("from Stock where idStock=:codigo");
            q.setInteger("codigo", this.idStock);
            it=q.list().iterator();
            if(it.hasNext()){
                stock=(Stock)it.next();
                this.quantidadeProduto=getQuantidadeProduto();
                this.produtoId=getProdutoId();
                this.produtos=getProdutos();
            
            }
            tr.commit();
        
        }catch(Exception e){
            e.printStackTrace();
            tr.rollback();
        }
    
    
    return quantidadeProduto+", "+produtoId+", "+produtos;
    }






}


